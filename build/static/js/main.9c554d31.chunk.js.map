{"version":3,"sources":["login.js","todoform.js","todolist.js","title.js","file.js","greet.js","logincontrol.js","App.js","reportWebVitals.js","index.js"],"names":["Login","TextField","id","label","type","autoComplete","variant","TodoForm","todoRef","React","createRef","addItemOnList","e","preventDefault","todoItem","todo","current","value","isCompleted","props","addToDoItems","currentTarget","reset","onSubmit","this","name","ref","required","Component","TodoList","handleChange","event","updateTodo","todoItems","console","log","updateTodos","index","toggleCheckbox","checked","className","onChange","onClick","removeToDoItem","headerStyle","background","color","textAlign","padding","fontsize","Header","style","File","state","item","items","Date","now","setState","todos","key","updatedTodo","Object","keys","map","UserGreeting","GuestGreeting","Greeting","isLoggedIn","ReactDOM","render","document","getElementById","LoginButton","Button","fullWidth","margin","Link","LogoutButton","LoginControl","handleLoginClick","bind","handleLogoutClick","button","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.9c554d31.chunk.js","sourcesContent":["import TextField from '@material-ui/core/TextField';\r\n\r\nconst Login=()=>{\r\n    return (\r\n        <div>\r\n        <TextField\r\n                  id=\"outlined-password-input\"\r\n                  label=\"Email\"\r\n                  type=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  variant=\"outlined\"\r\n                />\r\n        <TextField\r\n                  id=\"outlined-password-input\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  variant=\"outlined\"\r\n                />\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default Login;","import React from \"react\";\r\n\r\nclass TodoForm extends React.Component {\r\n  todoRef = React.createRef();\r\n\r\n  addItemOnList = e => {\r\n    e.preventDefault();\r\n    const todoItem = {\r\n      todo: this.todoRef.current.value,\r\n      isCompleted: false\r\n    };\r\n    this.props.addToDoItems(todoItem);\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form id=\"todoList-form\" onSubmit={this.addItemOnList}>\r\n        <input type=\"text\" name=\"todosTxtbx\" ref={this.todoRef} required />\r\n        <button>+</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoForm;","import React from \"react\";\r\n\r\nclass TodoList extends React.Component {\r\n  handleChange = event => {\r\n    const updateTodo = {\r\n      ...this.props.todoItems,\r\n      [event.currentTarget.name]: event.currentTarget.value\r\n    };\r\n    console.log(event.currentTarget.value);\r\n    this.props.updateTodos(this.props.index, updateTodo);\r\n  };\r\n\r\n  toggleCheckbox = event => {\r\n    const updateTodo = {\r\n      ...this.props.todoItems,\r\n      [event.currentTarget.name]: event.currentTarget.checked\r\n    };\r\n    this.props.updateTodos(this.props.index, updateTodo);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <li className={this.props.todoItems.isCompleted ? \"done\" : null}>\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"isCompleted\"\r\n          checked={this.props.todoItems.isCompleted}\r\n          onChange={this.toggleCheckbox}\r\n          // checked={this.props.todoItems.isChecked}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"todo\"\r\n          value={this.props.todoItems.todo}\r\n          onChange={this.handleChange}\r\n        />\r\n        {/* <button>Edit</button> */}\r\n        <button\r\n          className=\"del-btn\"\r\n          onClick={() => this.props.removeToDoItem(this.props.index)}\r\n        >\r\n          x\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>CGU Todo list</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#5F9EA0',\r\n    color: '#FFFFE0',\r\n    textAlign: 'center',\r\n    padding: '10px',\r\n    fontsize:'xx-large',\r\n}\r\n\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport TodoForm from \"./todoform\";\r\nimport TodoList from \"./todolist\";\r\nimport Title from \"./title\"\r\nclass File extends Component {\r\n    state = {\r\n      todoItems: {}\r\n    };\r\n    addToDoItems = item => {\r\n        const items = { ...this.state.todoItems };\r\n        console.log(items);\r\n        items[`item${Date.now()}`] = item;\r\n        this.setState({\r\n          todoItems: items\r\n        });\r\n      };\r\n    \r\n      removeToDoItem = item => {\r\n        const todos = { ...this.state.todoItems };\r\n        delete todos[item];\r\n        this.setState({ todoItems: todos });\r\n      };\r\n    \r\n      updateTodos = (key, updatedTodo) => {\r\n        const todos = { ...this.state.todoItems };\r\n        todos[key] = updatedTodo;\r\n        this.setState({ todoItems: todos });\r\n      };\r\n    \r\n      render() {\r\n        return (\r\n          <div className=\"App\">\r\n            <Title/>\r\n            <TodoForm addToDoItems={this.addToDoItems} />\r\n            <ul>\r\n              {Object.keys(this.state.todoItems).map(key => (\r\n                <TodoList\r\n                  key={key}\r\n                  index={key}\r\n                  todoItems={this.state.todoItems[key]}\r\n                  removeToDoItem={this.removeToDoItem}\r\n                  updateTodos={this.updateTodos}\r\n                />\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    export default File;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport LoginModule from './login'\r\nimport File from \"./file\"\r\nfunction UserGreeting(props) {   \r\n    return <LoginModule/>; \r\n} \r\nfunction GuestGreeting(props) {   \r\n    return <File/>; \r\n} \r\nfunction Greeting(props) {   \r\n    const isLoggedIn = props.isLoggedIn;\r\n   if (isLoggedIn) {\r\n      return <GuestGreeting />;\r\n   }\r\n   return <UserGreeting />; \r\n} \r\nReactDOM.render(   \r\n    <Greeting isLoggedIn={false} />,   document.getElementById('root') \r\n);\r\nexport default Greeting;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Greeting from './greet';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction LoginButton(props) {\r\n    return <Button onClick={props.onClick}\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            margin=\"theme.spacing(10, 0, 10)\" \r\n            >\r\n    <Link color=\"inherit\" >\r\n      Sign In\r\n    </Link>\r\n  </Button>;\r\n}\r\n\r\nfunction LogoutButton(props) {\r\n    return <button onClick={props.onClick}>Logout</button>;\r\n}\r\n\r\nclass LoginControl extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLoginClick = this.handleLoginClick.bind(this);\r\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\r\n    this.state = {isLoggedIn: false};\r\n  }\r\n\r\n  handleLoginClick() {\r\n    this.setState({isLoggedIn: true});\r\n  }\r\n\r\n  handleLogoutClick() {\r\n    this.setState({isLoggedIn: false});\r\n  }\r\n\r\n  render() {\r\n    const isLoggedIn = this.state.isLoggedIn;\r\n    let button = null;\r\n    if(isLoggedIn) {\r\n        button = <LogoutButton onClick={this.handleLogoutClick} />;\r\n    } else {\r\n        button = <LoginButton onClick={this.handleLoginClick} />;\r\n    }\r\n    return (\r\n      <div>\r\n          <Greeting isLoggedIn={isLoggedIn} />\r\n          {button}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginControl;","import React, { Component } from 'react';\nimport \"./App.css\";\nimport LoginControl from './logincontrol';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <section>\n          <LoginControl />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}